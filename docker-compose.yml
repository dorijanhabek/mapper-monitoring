services:
  kai-interface:
    container_name: kai-interface
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1234:80"
    volumes:
      - ./kai:/usr/share/nginx/html
    restart: unless-stopped
    depends_on:
      - prometheus
      - alertmanager
    networks:
      - kai-network

  kai-api:
    build: ./api
    container_name: kai-api
    ports:
      - "3000:3000"
    depends_on:
      - alertmanager
    volumes:
      - ./kai:/app/kai
    restart: unless-stopped
    networks:
      - kai-network

  kai-prometheus:
    image: prom/prometheus:latest
    container_name: kai-prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    restart: unless-stopped
    networks:
      - kai-network

  kai-alertmanager:
    image: prom/alertmanager:latest
    container_name: kai-alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./config/alertmanager:/config
      - alertmanager-data:/data
    command: --config.file=/etc/alertmanager/alertmanager.yml --log.level=debug
    restart: unless-stopped
    networks:
      - kai-network

  kai-node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: kai-node-exporter
    command:
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run|boot|var/lib/docker/overlay2)($|/)
    ports:
      - 9100:9100
    volumes:
      - /:/host
    restart: unless-stopped
    networks:
      - kai-network

volumes:
  prometheus-data:
    driver: local
  alertmanager-data:
    driver: local

networks:
  kai-network:
    driver: bridge
